[{"/Users/javierlopez/Desktop/Projects/user-info/src/index.js":"1","/Users/javierlopez/Desktop/Projects/user-info/src/App.js":"2","/Users/javierlopez/Desktop/Projects/user-info/src/reportWebVitals.js":"3","/Users/javierlopez/Desktop/Projects/user-info/src/components/Search.js":"4","/Users/javierlopez/Desktop/Projects/user-info/src/components/Header.js":"5","/Users/javierlopez/Desktop/Projects/user-info/src/hooks/Github.js":"6","/Users/javierlopez/Desktop/Projects/user-info/src/components/Usercard.js":"7"},{"size":637,"mtime":1623163870499,"results":"8","hashOfConfig":"9"},{"size":335,"mtime":1623157489896,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1622899198771,"results":"11","hashOfConfig":"9"},{"size":4348,"mtime":1623163870498,"results":"12","hashOfConfig":"9"},{"size":781,"mtime":1623157489897,"results":"13","hashOfConfig":"9"},{"size":253,"mtime":1623080265643,"results":"14","hashOfConfig":"9"},{"size":803,"mtime":1623157489898,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14pn09n",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/javierlopez/Desktop/Projects/user-info/src/index.js",[],"/Users/javierlopez/Desktop/Projects/user-info/src/App.js",[],"/Users/javierlopez/Desktop/Projects/user-info/src/reportWebVitals.js",[],["33","34"],"/Users/javierlopez/Desktop/Projects/user-info/src/components/Search.js",["35"],"import React, { useEffect, useState } from 'react';\nimport { Form } from 'semantic-ui-react'\nimport '../App.css';\nimport Card from 'react-bootstrap/Card'\nimport { FaMapMarkerAlt, FaLink } from \"react-icons/fa\";\nimport { Button } from 'reactstrap';\n\nfunction Search() {\n  const [result, setResult] = useState(\"\")\n  const [username, setUsername] = useState(\"\")\n  const [name, setName] = useState(\"\")\n  const [avatar, setAvatar] = useState(\"\")\n  const [location, setLocation] = useState(\"\")\n  const [blog, setBlog] = useState(\"\")\n  const [git, setGit] = useState(\"\")\n  const [searchInput, setSearchInput] = useState(\"\")\n\n  useEffect(() => {\n    fetch(\"https://api.github.com/users/xavierloos/repos\")\n      .then(res => res.json())\n      .then(data => {\n        const languages = data.map(language => (\n          language.language\n        ))\n        favLanguage(languages)\n      });\n    fetch(\"https://api.github.com/users/xavierloos\")\n      .then(res => res.json())\n      .then(data => {\n        setUserData(data.login, data.avatar_url, data.name, data.location, data.blog, data.html_url)\n      });\n  }, [])\n\n  const setUserData = (username, avatar, name, location, blog, git) => {\n    setUsername(username)\n    setAvatar(avatar)\n    setName(name)\n    setLocation(location)\n    setBlog(blog)\n    setGit(git)\n  }\n\n  const setData = result => {\n    setResult(result)\n  }\n\n  const favLanguage = lang => {\n    var countLang = {}, counter = 0, favorite = [];\n    lang.forEach(item => {\n      (!countLang[item]) ? countLang[item] = 1 : countLang[item]++;\n      if (countLang[item] > counter) {\n        counter = countLang[item];\n        favorite = [item];\n      } else if (countLang[item] === counter) {\n        favorite.push(item);\n      }\n    });\n    setData(favorite)\n  }\n\n  const handleSearch = e => {\n    setSearchInput(e.target.value)\n  }\n\n  const handleSubmit = () => {\n    fetch(`https://api.github.com/users/${searchInput}/repos`)\n      .then(res => res.json())\n      .then(data => {\n        const languages = data.map(language => (\n          language.language\n        ))\n        favLanguage(languages)\n      });\n    fetch(`https://api.github.com/users/${searchInput}`)\n      .then(res => res.json())\n      .then(data => {\n        setUserData(data.login, data.avatar_url, data.name, data.location, data.blog, data.html_url)\n      });\n  }\n\n  return (\n    <div className=\"search-container\">\n      <div className=\"container-fluid search \">\n        <div className=\"container \">\n          <div className=\"row row-header \">\n            <div className=\"col-12 col-sm-12 mx-auto align-content-center \">\n              <Form onSubmit={handleSubmit}>\n                <Form.Group>\n                  <Form.Input placeholder=\"Search for a github username\" name=\"username\" onChange={handleSearch} />\n                  <Form.Button content=\"Search\" />\n                </Form.Group>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"row row-header \">\n          <div className=\"col-12 col-sm-12 d-flex justify-content-center\">\n            <Card style={{ width: '18rem' }}>\n              <div className=\"card-header\">\n                <Card.Img className=\"avatar\" src={avatar} />\n              </div>\n              <Card.Body>\n                <Card.Title className=\"d-flex justify-content-center\">{name}</Card.Title>\n                <Card.Text>\n                  <div className=\"info\">\n                    @{username}'s favorite language is <span className=\"lang\">{result}</span>!\n                  </div>\n                  <div className=\"col-12 col-sm-12 d-flex justify-content-between\">\n                    <div className=\"text-muted\" >\n                      <FaMapMarkerAlt />{location}\n                    </div>\n                    <div >\n                      <a href={blog} alt=\"Go to the blog link\" className=\"text-muted\"><FaLink /> Blog</a>\n                    </div>\n                  </div>\n                  <div>\n                    <a href={git} alt=\"Go to GitHub\">\n                      <Button className=\"github-button\">Open on Github</Button>\n                    </a>\n                  </div>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\nexport default Search;","/Users/javierlopez/Desktop/Projects/user-info/src/components/Header.js",["36"],"import React from 'react';\nimport { Jumbotron } from 'reactstrap';\nimport '../App.css';\nfunction Header() {\n  return (\n    <Jumbotron>\n      <div className=\"container\">\n        <div className=\"row row-header\">\n          <div className=\"col-3 col-sm-3\">\n            <img className=\"logo\" src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fpluspng.com%2Fimg-png%2Fgithub-octocat-logo-vector-png-octodex-api-octodex-json-at-master-cocoaheads-miami-octodex-896.png&f=1&nofb=1\"/>\n          </div>\n          <div className=\"col-9 col-sm-9\">\n            <h1>Github Username</h1>\n            <p className=\"slogan\">Getting inspiration from github users favorite coding language.</p>\n          </div>\n        </div>\n      </div>\n    </Jumbotron>\n  );\n}\n\n\nexport default Header;","/Users/javierlopez/Desktop/Projects/user-info/src/hooks/Github.js",[],"/Users/javierlopez/Desktop/Projects/user-info/src/components/Usercard.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":32,"column":6,"nodeType":"43","endLine":32,"endColumn":8,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":10,"column":13,"nodeType":"47","endLine":10,"endColumn":236},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'favLanguage'. Either include it or remove the dependency array.","ArrayExpression",["50"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [favLanguage]",{"range":"53","text":"54"},[1101,1103],"[favLanguage]"]