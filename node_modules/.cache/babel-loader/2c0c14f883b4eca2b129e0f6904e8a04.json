{"ast":null,"code":"var _jsxFileName = \"/Users/javierlopez/Desktop/Projects/user-info/src/hooks/API.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class API extends Component {\n  constructor(props) {\n    super(props);\n\n    this.favLanguage = lang => {\n      var countLang = {},\n          counter = 0,\n          favorite = [];\n      lang.forEach(item => {\n        !countLang[item] ? countLang[item] = 1 : countLang[item]++;\n\n        if (countLang[item] > counter) {\n          counter = countLang[item];\n          favorite = [item];\n        } else if (countLang[item] === counter) {\n          favorite.push(item);\n        }\n      });\n      setData(favorite);\n    };\n\n    this.state = {\n      username: null,\n      email: null\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://api.github.com/users/xavierloos/repos\").then(res => res.json()).then(data => {\n      const languages = data.map(language => language.language);\n      favLanguage(languages);\n    }); // .catch(error => {\n    //   console.log(error)\n    // })\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [this.state.name, \" - \", this.state.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/javierlopez/Desktop/Projects/user-info/src/hooks/API.js"],"names":["React","Component","axios","API","constructor","props","favLanguage","lang","countLang","counter","favorite","forEach","item","push","setData","state","username","email","componentDidMount","get","then","res","json","data","languages","map","language","render","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AACzCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuBnBC,WAvBmB,GAuBLC,IAAI,IAAI;AACpB,UAAIC,SAAS,GAAG,EAAhB;AAAA,UAAoBC,OAAO,GAAG,CAA9B;AAAA,UAAiCC,QAAQ,GAAG,EAA5C;AACAH,MAAAA,IAAI,CAACI,OAAL,CAAaC,IAAI,IAAI;AAClB,SAACJ,SAAS,CAACI,IAAD,CAAX,GAAqBJ,SAAS,CAACI,IAAD,CAAT,GAAkB,CAAvC,GAA2CJ,SAAS,CAACI,IAAD,CAAT,EAA3C;;AACA,YAAIJ,SAAS,CAACI,IAAD,CAAT,GAAkBH,OAAtB,EAA+B;AAC7BA,UAAAA,OAAO,GAAGD,SAAS,CAACI,IAAD,CAAnB;AACAF,UAAAA,QAAQ,GAAG,CAACE,IAAD,CAAX;AACD,SAHD,MAGO,IAAIJ,SAAS,CAACI,IAAD,CAAT,KAAoBH,OAAxB,EAAiC;AACtCC,UAAAA,QAAQ,CAACG,IAAT,CAAcD,IAAd;AACD;AACF,OARD;AASAE,MAAAA,OAAO,CAACJ,QAAD,CAAP;AACD,KAnCkB;;AAEjB,SAAKK,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,IADC;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBhB,IAAAA,KAAK,CAACiB,GAAN,CAAU,+CAAV,EACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI;AACV,YAAMC,SAAS,GAAGD,IAAI,CAACE,GAAL,CAASC,QAAQ,IACjCA,QAAQ,CAACA,QADO,CAAlB;AAIApB,MAAAA,WAAW,CAACkB,SAAD,CAAX;AACD,KARH,EADkB,CAUlB;AACA;AACA;AACD;;AAgBDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAA,mBAAO,KAAKZ,KAAL,CAAWa,IAAlB,SAA2B,KAAKb,KAAL,CAAWE,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA5CwC","sourcesContent":["import React, { Component }  from 'react';\nimport axios from 'axios';\n\nexport default class API extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: null,\n      email: null\n    }\n  }\n\n  componentDidMount() {\n    axios.get(\"https://api.github.com/users/xavierloos/repos\")\n    .then(res => res.json())\n    .then(data => {\n        const languages = data.map(language => (\n          language.language\n        ))\n      \n        favLanguage(languages)\n      });\n    // .catch(error => {\n    //   console.log(error)\n    // })\n  }\n\n  favLanguage = lang => {\n    var countLang = {}, counter = 0, favorite = [];\n    lang.forEach(item => {\n      (!countLang[item]) ? countLang[item] = 1 : countLang[item]++;\n      if (countLang[item] > counter) {\n        counter = countLang[item];\n        favorite = [item];\n      } else if (countLang[item] === counter) {\n        favorite.push(item);\n      }\n    });\n    setData(favorite)\n  }\n\n  render() {\n    return (\n      <div>\n        <span>{this.state.name} - {this.state.email}</span>\n      </div>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}